регулярочка
________________________________________________________________________________________________________________________
((" " | "\n" | ";")*(NAME((" " | "\n")+ | ("*"(" " | "\n")+))(("*")+(" " | "\n")*)*NAME((" " | "\n")*,(" " | "\n")*(("*")+(" " | "\n")*)*NAME)*(" " | "\n")*";")?)*
________________________________________________________________________________________________________________________

NAME - имя переменной или типа
________________________________________________________________________________________________________________________
изначальный
________________________________________________________________________________________________________________________

S -> SS         обьявление переменных разного типа ( ну или просто множество " ", "\n"  ";", или вообще ничего)
S -> VLG        сколько угодно " ", "\n" и ";" и определение переменных ну или просто множество " ", "\n"  ";"
S -> eps        ну или ничего
G -> TypeMD;    имя типа, обязательный " " или "\n", непустое множество переменных, сколько угодно " " и "\n", и ";" тоесть полноценное определение переменных
G -> eps        ну или не будем ничего обьявлять
L -> ;VL        ну логично сразу справа L разместить, зачем плодить левую рекурсию; ";" и множество " ", "\n", ";"
L -> eps        или ничего. Итого множество " ", "\n", ";"
W -> " "W       аналогично L; Сколько угодно пробелов, но больше 1
W -> "\n"W      Сколько угодно "\n", но больше 1
V -> W          Сколько угодно чередующихся " " и "\n"
V -> eps        Мб нисколько
D -> TVK        1 перменная со * и возможно еще переменные
K -> ,VD        сколько угодно пробелов и "\n", "," и продолжение ряда переменных (перед и после запятой сколько угодно пробелов и "\n")
K -> eps        ну или продолжения не будет
T -> ZT         копим * для переменной(через пробелы и "\n")
T -> N          собсна сама переменная
Z -> *V         обязательная звездочка и пробелы или "\n"
M -> Z          обязательная звездочка и пробелы или "\n"
M -> W          обязательный пробел или "\n" и пробелы или "\n"
N -> NAME       нетерминал для терминала с именем переменной
Type -> NAME	нетерминал для терминала с именем типа
________________________________________________________________________________________________________________________
преобразованный
________________________________________________________________________________________________________________________
S -> VLG
G -> TypeMD;S     вместо S -> SS добавим S в конец G и удалим S -> eps так как VLG итак -> eps(второе чисто косметическое)
G -> eps
L -> ;VL
L -> eps
W -> " "V
W -> "\n"V
V -> W
V -> eps
D -> TVK
K -> ,VD
K -> eps
T -> ZT
T -> N
Z -> *V
M -> Z
M -> W
N -> NAME
Type -> NAME

|_______________________________|_______________________|
|Names|         FIRST           |        FOLLOW         |
|_____|_________________________|_______________________|
|  S  | eps '\n' ' ' ';' 'NAME' |          $            |
|_____|_________________________|_______________________|
|  G  |       eps 'NAME'        |          $            |
|_____|_________________________|_______________________|
|  L  |         eps ';'         |      'NAME' $         |
|_____|_________________________|_______________________|
|  W  |        '\n' ' '         |    ';' 'x' '*' ',' $  |
|_____|_________________________|_______________________|
|  V  |      eps '\n' ' '       |    ';' 'x' '*' ',' $  |
|_____|_________________________|_______________________|
|  D  |       'NAME' '*'        |         ';'           |`
|_____|_________________________|_______________________|
|  K  |         eps  ','        |         ';'           |
|_____|_________________________|_______________________|
|  T  |       'NAME' '*'        |   '\n' ' ' ';' ','    |
|_____|_________________________|_______________________|
|  M  |      '\n' ' ' '*'       |       'NAME' '*'      |
|_____|_________________________|_______________________|
|  Z  |           '*'           |       'NAME' '*'      |
|_____|_________________________|_______________________|
|  N  |         'NAME'          |   '\n' ' ' ';' ','    |
|_____|_________________________|_______________________|
|Type |         'NAME'          |   '\n' ' ' ';' ','    |
|_____|_________________________|_______________________|


____________________________________________
Без пробелов и '\n'
____________________________________________
S -> TypeDLS
S -> eps
L -> ;V
V -> L
V -> eps
D -> TK
K -> ,D
K -> eps
T -> *T
T -> Var
Var -> NAME
Type -> NAME

| Names |    FIRST    |    FOLLOW     |
|:-----:|:-----------:|:-------------:|
|   S   |   'NAME'    |       $       |
| Next  | eps, 'NAME' |       $       |
|   L   |     ';'     |   'NAME', $   |
|   V   |  eps, ';'   |   'NAME', $   |
|   D   | 'NAME', '*' |      ';'      |
|   K   |  eps,  ','  |      ';'      |
|   T   | 'NAME', '*' |   ';', ','    |
|  Var  |   'NAME'    |   ',', ';'    |
| Type  |   'NAME'    | 'NAME', '*',  |
______________________________________________________________
S=Type, D, L, S;
L=";", V;
V=L|;
D=T, K;
K=",", D|;
T="*", T|Var;
Type="x";
Var="x";
syntax=S;
